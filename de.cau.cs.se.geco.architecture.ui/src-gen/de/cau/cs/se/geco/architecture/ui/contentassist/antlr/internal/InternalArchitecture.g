/*
* generated by Xtext
*/
grammar InternalArchitecture;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package de.cau.cs.se.geco.architecture.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cau.cs.se.geco.architecture.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.cau.cs.se.geco.architecture.services.ArchitectureGrammarAccess;

}

@parser::members {
 
 	private ArchitectureGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ArchitectureGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getAlternatives()); }
(rule__Import__Alternatives)
{ after(grammarAccess.getImportAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeaverImport
entryRuleWeaverImport 
:
{ before(grammarAccess.getWeaverImportRule()); }
	 ruleWeaverImport
{ after(grammarAccess.getWeaverImportRule()); } 
	 EOF 
;

// Rule WeaverImport
ruleWeaverImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWeaverImportAccess().getGroup()); }
(rule__WeaverImport__Group__0)
{ after(grammarAccess.getWeaverImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGeneratorImport
entryRuleGeneratorImport 
:
{ before(grammarAccess.getGeneratorImportRule()); }
	 ruleGeneratorImport
{ after(grammarAccess.getGeneratorImportRule()); } 
	 EOF 
;

// Rule GeneratorImport
ruleGeneratorImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGeneratorImportAccess().getGroup()); }
(rule__GeneratorImport__Group__0)
{ after(grammarAccess.getGeneratorImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetamodelSequence
entryRuleMetamodelSequence 
:
{ before(grammarAccess.getMetamodelSequenceRule()); }
	 ruleMetamodelSequence
{ after(grammarAccess.getMetamodelSequenceRule()); } 
	 EOF 
;

// Rule MetamodelSequence
ruleMetamodelSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetamodelSequenceAccess().getGroup()); }
(rule__MetamodelSequence__Group__0)
{ after(grammarAccess.getMetamodelSequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetamodel
entryRuleMetamodel 
:
{ before(grammarAccess.getMetamodelRule()); }
	 ruleMetamodel
{ after(grammarAccess.getMetamodelRule()); } 
	 EOF 
;

// Rule Metamodel
ruleMetamodel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetamodelAccess().getNameAssignment()); }
(rule__Metamodel__NameAssignment)
{ after(grammarAccess.getMetamodelAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegisteredPackage
entryRuleRegisteredPackage 
:
{ before(grammarAccess.getRegisteredPackageRule()); }
	 ruleRegisteredPackage
{ after(grammarAccess.getRegisteredPackageRule()); } 
	 EOF 
;

// Rule RegisteredPackage
ruleRegisteredPackage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegisteredPackageAccess().getGroup()); }
(rule__RegisteredPackage__Group__0)
{ after(grammarAccess.getRegisteredPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConnection
entryRuleConnection 
:
{ before(grammarAccess.getConnectionRule()); }
	 ruleConnection
{ after(grammarAccess.getConnectionRule()); } 
	 EOF 
;

// Rule Connection
ruleConnection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConnectionAccess().getAlternatives()); }
(rule__Connection__Alternatives)
{ after(grammarAccess.getConnectionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeaver
entryRuleWeaver 
:
{ before(grammarAccess.getWeaverRule()); }
	 ruleWeaver
{ after(grammarAccess.getWeaverRule()); } 
	 EOF 
;

// Rule Weaver
ruleWeaver
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWeaverAccess().getGroup()); }
(rule__Weaver__Group__0)
{ after(grammarAccess.getWeaverAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAspectModel
entryRuleAspectModel 
:
{ before(grammarAccess.getAspectModelRule()); }
	 ruleAspectModel
{ after(grammarAccess.getAspectModelRule()); } 
	 EOF 
;

// Rule AspectModel
ruleAspectModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAspectModelAccess().getAlternatives()); }
(rule__AspectModel__Alternatives)
{ after(grammarAccess.getAspectModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGenerator
entryRuleGenerator 
:
{ before(grammarAccess.getGeneratorRule()); }
	 ruleGenerator
{ after(grammarAccess.getGeneratorRule()); } 
	 EOF 
;

// Rule Generator
ruleGenerator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGeneratorAccess().getGroup()); }
(rule__Generator__Group__0)
{ after(grammarAccess.getGeneratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSourceModelNodeSelector
entryRuleSourceModelNodeSelector 
:
{ before(grammarAccess.getSourceModelNodeSelectorRule()); }
	 ruleSourceModelNodeSelector
{ after(grammarAccess.getSourceModelNodeSelectorRule()); } 
	 EOF 
;

// Rule SourceModelNodeSelector
ruleSourceModelNodeSelector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSourceModelNodeSelectorAccess().getAlternatives()); }
(rule__SourceModelNodeSelector__Alternatives)
{ after(grammarAccess.getSourceModelNodeSelectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTargetModelNodeType
entryRuleTargetModelNodeType 
:
{ before(grammarAccess.getTargetModelNodeTypeRule()); }
	 ruleTargetModelNodeType
{ after(grammarAccess.getTargetModelNodeTypeRule()); } 
	 EOF 
;

// Rule TargetModelNodeType
ruleTargetModelNodeType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTargetModelNodeTypeAccess().getGroup()); }
(rule__TargetModelNodeType__Group__0)
{ after(grammarAccess.getTargetModelNodeTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelNodeType
entryRuleModelNodeType 
:
{ before(grammarAccess.getModelNodeTypeRule()); }
	 ruleModelNodeType
{ after(grammarAccess.getModelNodeTypeRule()); } 
	 EOF 
;

// Rule ModelNodeType
ruleModelNodeType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelNodeTypeAccess().getGroup()); }
(rule__ModelNodeType__Group__0)
{ after(grammarAccess.getModelNodeTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeProperty
entryRuleNodeProperty 
:
{ before(grammarAccess.getNodePropertyRule()); }
	 ruleNodeProperty
{ after(grammarAccess.getNodePropertyRule()); } 
	 EOF 
;

// Rule NodeProperty
ruleNodeProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodePropertyAccess().getGroup()); }
(rule__NodeProperty__Group__0)
{ after(grammarAccess.getNodePropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraintExpression
entryRuleConstraintExpression 
:
{ before(grammarAccess.getConstraintExpressionRule()); }
	 ruleConstraintExpression
{ after(grammarAccess.getConstraintExpressionRule()); } 
	 EOF 
;

// Rule ConstraintExpression
ruleConstraintExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintExpressionAccess().getGroup()); }
(rule__ConstraintExpression__Group__0)
{ after(grammarAccess.getConstraintExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareExpression
entryRuleCompareExpression 
:
{ before(grammarAccess.getCompareExpressionRule()); }
	 ruleCompareExpression
{ after(grammarAccess.getCompareExpressionRule()); } 
	 EOF 
;

// Rule CompareExpression
ruleCompareExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareExpressionAccess().getGroup()); }
(rule__CompareExpression__Group__0)
{ after(grammarAccess.getCompareExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasicConstraint
entryRuleBasicConstraint 
:
{ before(grammarAccess.getBasicConstraintRule()); }
	 ruleBasicConstraint
{ after(grammarAccess.getBasicConstraintRule()); } 
	 EOF 
;

// Rule BasicConstraint
ruleBasicConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasicConstraintAccess().getAlternatives()); }
(rule__BasicConstraint__Alternatives)
{ after(grammarAccess.getBasicConstraintAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesisConstraint
entryRuleParenthesisConstraint 
:
{ before(grammarAccess.getParenthesisConstraintRule()); }
	 ruleParenthesisConstraint
{ after(grammarAccess.getParenthesisConstraintRule()); } 
	 EOF 
;

// Rule ParenthesisConstraint
ruleParenthesisConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesisConstraintAccess().getGroup()); }
(rule__ParenthesisConstraint__Group__0)
{ after(grammarAccess.getParenthesisConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperand
entryRuleOperand 
:
{ before(grammarAccess.getOperandRule()); }
	 ruleOperand
{ after(grammarAccess.getOperandRule()); } 
	 EOF 
;

// Rule Operand
ruleOperand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperandAccess().getAlternatives()); }
(rule__Operand__Alternatives)
{ after(grammarAccess.getOperandAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTraceModel
entryRuleTraceModel 
:
{ before(grammarAccess.getTraceModelRule()); }
	 ruleTraceModel
{ after(grammarAccess.getTraceModelRule()); } 
	 EOF 
;

// Rule TraceModel
ruleTraceModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraceModelAccess().getGroup()); }
(rule__TraceModel__Group__0)
{ after(grammarAccess.getTraceModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeSetRelation
entryRuleNodeSetRelation 
:
{ before(grammarAccess.getNodeSetRelationRule()); }
	 ruleNodeSetRelation
{ after(grammarAccess.getNodeSetRelationRule()); } 
	 EOF 
;

// Rule NodeSetRelation
ruleNodeSetRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeSetRelationAccess().getGroup()); }
(rule__NodeSetRelation__Group__0)
{ after(grammarAccess.getNodeSetRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNodeType
entryRuleNodeType 
:
{ before(grammarAccess.getNodeTypeRule()); }
	 ruleNodeType
{ after(grammarAccess.getNodeTypeRule()); } 
	 EOF 
;

// Rule NodeType
ruleNodeType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNodeTypeAccess().getEclassAssignment()); }
(rule__NodeType__EclassAssignment)
{ after(grammarAccess.getNodeTypeAccess().getEclassAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayLiteral
entryRuleArrayLiteral 
:
{ before(grammarAccess.getArrayLiteralRule()); }
	 ruleArrayLiteral
{ after(grammarAccess.getArrayLiteralRule()); } 
	 EOF 
;

// Rule ArrayLiteral
ruleArrayLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayLiteralAccess().getGroup()); }
(rule__ArrayLiteral__Group__0)
{ after(grammarAccess.getArrayLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
(rule__StringLiteral__ValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntLiteral
entryRuleIntLiteral 
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
(rule__IntLiteral__ValueAssignment)
{ after(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral 
:
{ before(grammarAccess.getFloatLiteralRule()); }
	 ruleFloatLiteral
{ after(grammarAccess.getFloatLiteralRule()); } 
	 EOF 
;

// Rule FloatLiteral
ruleFloatLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatLiteralAccess().getValueAssignment()); }
(rule__FloatLiteral__ValueAssignment)
{ after(grammarAccess.getFloatLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
(rule__BooleanLiteral__ValueAssignment)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicOperator
entryRuleLogicOperator 
:
{ before(grammarAccess.getLogicOperatorRule()); }
	 ruleLogicOperator
{ after(grammarAccess.getLogicOperatorRule()); } 
	 EOF 
;

// Rule LogicOperator
ruleLogicOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicOperatorAccess().getAlternatives()); }
(rule__LogicOperator__Alternatives)
{ after(grammarAccess.getLogicOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComparator
entryRuleComparator 
:
{ before(grammarAccess.getComparatorRule()); }
	 ruleComparator
{ after(grammarAccess.getComparatorRule()); } 
	 EOF 
;

// Rule Comparator
ruleComparator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComparatorAccess().getAlternatives()); }
(rule__Comparator__Alternatives)
{ after(grammarAccess.getComparatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getConnectionsAssignment_5_0()); }
(rule__Model__ConnectionsAssignment_5_0)
{ after(grammarAccess.getModelAccess().getConnectionsAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getMetamodelsAssignment_5_1()); }
(rule__Model__MetamodelsAssignment_5_1)
{ after(grammarAccess.getModelAccess().getMetamodelsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getWeaverImportParserRuleCall_0()); }
	ruleWeaverImport
{ after(grammarAccess.getImportAccess().getWeaverImportParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getImportAccess().getGeneratorImportParserRuleCall_1()); }
	ruleGeneratorImport
{ after(grammarAccess.getImportAccess().getGeneratorImportParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getImportedNamespaceAssignment_2_0()); }
(rule__RegisteredPackage__ImportedNamespaceAssignment_2_0)
{ after(grammarAccess.getRegisteredPackageAccess().getImportedNamespaceAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getRegisteredPackageAccess().getGroup_2_1()); }
(rule__RegisteredPackage__Group_2_1__0)
{ after(grammarAccess.getRegisteredPackageAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Connection__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConnectionAccess().getGeneratorParserRuleCall_0()); }
	ruleGenerator
{ after(grammarAccess.getConnectionAccess().getGeneratorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConnectionAccess().getWeaverParserRuleCall_1()); }
	ruleWeaver
{ after(grammarAccess.getConnectionAccess().getWeaverParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AspectModel__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getGroup_0()); }
(rule__AspectModel__Group_0__0)
{ after(grammarAccess.getAspectModelAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAspectModelAccess().getGeneratorParserRuleCall_1()); }
	ruleGenerator
{ after(grammarAccess.getAspectModelAccess().getGeneratorParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SourceModelNodeSelector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceModelNodeSelectorAccess().getGroup_0()); }
(rule__SourceModelNodeSelector__Group_0__0)
{ after(grammarAccess.getSourceModelNodeSelectorAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSourceModelNodeSelectorAccess().getGroup_1()); }
(rule__SourceModelNodeSelector__Group_1__0)
{ after(grammarAccess.getSourceModelNodeSelectorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicConstraint__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicConstraintAccess().getParenthesisConstraintParserRuleCall_0()); }
	ruleParenthesisConstraint
{ after(grammarAccess.getBasicConstraintAccess().getParenthesisConstraintParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBasicConstraintAccess().getOperandParserRuleCall_1()); }
	ruleOperand
{ after(grammarAccess.getBasicConstraintAccess().getOperandParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperandAccess().getLiteralParserRuleCall_0()); }
	ruleLiteral
{ after(grammarAccess.getOperandAccess().getLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOperandAccess().getNodePropertyParserRuleCall_1()); }
	ruleNodeProperty
{ after(grammarAccess.getOperandAccess().getNodePropertyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_0()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_1()); }
	ruleIntLiteral
{ after(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_2()); }
	ruleFloatLiteral
{ after(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_3()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getArrayLiteralParserRuleCall_4()); }
	ruleArrayLiteral
{ after(grammarAccess.getLiteralAccess().getArrayLiteralParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOperatorAccess().getANDAssignment_0()); }
(rule__LogicOperator__ANDAssignment_0)
{ after(grammarAccess.getLogicOperatorAccess().getANDAssignment_0()); }
)

    |(
{ before(grammarAccess.getLogicOperatorAccess().getORAssignment_1()); }
(rule__LogicOperator__ORAssignment_1)
{ after(grammarAccess.getLogicOperatorAccess().getORAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparatorAccess().getEQAssignment_0()); }
(rule__Comparator__EQAssignment_0)
{ after(grammarAccess.getComparatorAccess().getEQAssignment_0()); }
)

    |(
{ before(grammarAccess.getComparatorAccess().getNEAssignment_1()); }
(rule__Comparator__NEAssignment_1)
{ after(grammarAccess.getComparatorAccess().getNEAssignment_1()); }
)

    |(
{ before(grammarAccess.getComparatorAccess().getGRAssignment_2()); }
(rule__Comparator__GRAssignment_2)
{ after(grammarAccess.getComparatorAccess().getGRAssignment_2()); }
)

    |(
{ before(grammarAccess.getComparatorAccess().getLWAssignment_3()); }
(rule__Comparator__LWAssignment_3)
{ after(grammarAccess.getComparatorAccess().getLWAssignment_3()); }
)

    |(
{ before(grammarAccess.getComparatorAccess().getGEAssignment_4()); }
(rule__Comparator__GEAssignment_4)
{ after(grammarAccess.getComparatorAccess().getGEAssignment_4()); }
)

    |(
{ before(grammarAccess.getComparatorAccess().getLEAssignment_5()); }
(rule__Comparator__LEAssignment_5)
{ after(grammarAccess.getComparatorAccess().getLEAssignment_5()); }
)

    |(
{ before(grammarAccess.getComparatorAccess().getLIKEAssignment_6()); }
(rule__Comparator__LIKEAssignment_6)
{ after(grammarAccess.getComparatorAccess().getLIKEAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getModelAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
(rule__Model__NameAssignment_1)
{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportKeyword_2()); }

	'import' 

{ after(grammarAccess.getModelAccess().getImportKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_3()); }
(rule__Model__ImportsAssignment_3)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getModelAccess().getRegisteredPackagesAssignment_4()); }
(rule__Model__RegisteredPackagesAssignment_4)
{ after(grammarAccess.getModelAccess().getRegisteredPackagesAssignment_4()); }
)
(
{ before(grammarAccess.getModelAccess().getRegisteredPackagesAssignment_4()); }
(rule__Model__RegisteredPackagesAssignment_4)*
{ after(grammarAccess.getModelAccess().getRegisteredPackagesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAlternatives_5()); }
(rule__Model__Alternatives_5)*
{ after(grammarAccess.getModelAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__WeaverImport__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeaverImport__Group__0__Impl
	rule__WeaverImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WeaverImport__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeaverImportAccess().getWeaveKeyword_0()); }

	'weave' 

{ after(grammarAccess.getWeaverImportAccess().getWeaveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeaverImport__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeaverImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WeaverImport__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeaverImportAccess().getImportedNamespaceAssignment_1()); }
(rule__WeaverImport__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getWeaverImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GeneratorImport__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeneratorImport__Group__0__Impl
	rule__GeneratorImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneratorImport__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorImportAccess().getGenKeyword_0()); }

	'gen' 

{ after(grammarAccess.getGeneratorImportAccess().getGenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GeneratorImport__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GeneratorImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GeneratorImport__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorImportAccess().getImportedNamespaceAssignment_1()); }
(rule__GeneratorImport__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getGeneratorImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MetamodelSequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelSequence__Group__0__Impl
	rule__MetamodelSequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelSequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelSequenceAccess().getModelKeyword_0()); }

	'model' 

{ after(grammarAccess.getMetamodelSequenceAccess().getModelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelSequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelSequence__Group__1__Impl
	rule__MetamodelSequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelSequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelSequenceAccess().getTypeAssignment_1()); }
(rule__MetamodelSequence__TypeAssignment_1)
{ after(grammarAccess.getMetamodelSequenceAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelSequence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelSequence__Group__2__Impl
	rule__MetamodelSequence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelSequence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelSequenceAccess().getMetamodelsAssignment_2()); }
(rule__MetamodelSequence__MetamodelsAssignment_2)
{ after(grammarAccess.getMetamodelSequenceAccess().getMetamodelsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelSequence__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelSequence__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelSequence__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelSequenceAccess().getGroup_3()); }
(rule__MetamodelSequence__Group_3__0)*
{ after(grammarAccess.getMetamodelSequenceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MetamodelSequence__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelSequence__Group_3__0__Impl
	rule__MetamodelSequence__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelSequence__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelSequenceAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getMetamodelSequenceAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelSequence__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelSequence__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelSequence__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelSequenceAccess().getMetamodelsAssignment_3_1()); }
(rule__MetamodelSequence__MetamodelsAssignment_3_1)
{ after(grammarAccess.getMetamodelSequenceAccess().getMetamodelsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegisteredPackage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisteredPackage__Group__0__Impl
	rule__RegisteredPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getRegisterKeyword_0()); }

	'register' 

{ after(grammarAccess.getRegisteredPackageAccess().getRegisterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisteredPackage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisteredPackage__Group__1__Impl
	rule__RegisteredPackage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getNameAssignment_1()); }
(rule__RegisteredPackage__NameAssignment_1)
{ after(grammarAccess.getRegisteredPackageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisteredPackage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisteredPackage__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getAlternatives_2()); }
(rule__RegisteredPackage__Alternatives_2)
{ after(grammarAccess.getRegisteredPackageAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RegisteredPackage__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisteredPackage__Group_2_1__0__Impl
	rule__RegisteredPackage__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getIsTextAssignment_2_1_0()); }
(rule__RegisteredPackage__IsTextAssignment_2_1_0)
{ after(grammarAccess.getRegisteredPackageAccess().getIsTextAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegisteredPackage__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegisteredPackage__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getExtensionAssignment_2_1_1()); }
(rule__RegisteredPackage__ExtensionAssignment_2_1_1)
{ after(grammarAccess.getRegisteredPackageAccess().getExtensionAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Weaver__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Weaver__Group__0__Impl
	rule__Weaver__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Weaver__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeaverAccess().getWeaveKeyword_0()); }

	'weave' 

{ after(grammarAccess.getWeaverAccess().getWeaveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Weaver__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Weaver__Group__1__Impl
	rule__Weaver__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Weaver__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeaverAccess().getWeaverAssignment_1()); }
(rule__Weaver__WeaverAssignment_1)
{ after(grammarAccess.getWeaverAccess().getWeaverAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Weaver__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Weaver__Group__2__Impl
	rule__Weaver__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Weaver__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeaverAccess().getSourceModelAssignment_2()); }
(rule__Weaver__SourceModelAssignment_2)
{ after(grammarAccess.getWeaverAccess().getSourceModelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Weaver__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Weaver__Group__3__Impl
	rule__Weaver__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Weaver__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeaverAccess().getAspectModelAssignment_3()); }
(rule__Weaver__AspectModelAssignment_3)
{ after(grammarAccess.getWeaverAccess().getAspectModelAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Weaver__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Weaver__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Weaver__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeaverAccess().getGroup_4()); }
(rule__Weaver__Group_4__0)?
{ after(grammarAccess.getWeaverAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Weaver__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Weaver__Group_4__0__Impl
	rule__Weaver__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Weaver__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeaverAccess().getEqualsSignGreaterThanSignKeyword_4_0()); }

	'=>' 

{ after(grammarAccess.getWeaverAccess().getEqualsSignGreaterThanSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Weaver__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Weaver__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Weaver__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeaverAccess().getTargetModelAssignment_4_1()); }
(rule__Weaver__TargetModelAssignment_4_1)
{ after(grammarAccess.getWeaverAccess().getTargetModelAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AspectModel__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectModel__Group_0__0__Impl
	rule__AspectModel__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectModel__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getColonKeyword_0_0()); }

	':' 

{ after(grammarAccess.getAspectModelAccess().getColonKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AspectModel__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AspectModel__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AspectModel__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAspectModelAccess().getTargetModelNodeTypeParserRuleCall_0_1()); }
	ruleTargetModelNodeType
{ after(grammarAccess.getAspectModelAccess().getTargetModelNodeTypeParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Generator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group__0__Impl
	rule__Generator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getGenerateKeyword_0()); }

	'generate' 

{ after(grammarAccess.getGeneratorAccess().getGenerateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group__1__Impl
	rule__Generator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getGeneratorAssignment_1()); }
(rule__Generator__GeneratorAssignment_1)
{ after(grammarAccess.getGeneratorAccess().getGeneratorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group__2__Impl
	rule__Generator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getSourceModelAssignment_2()); }
(rule__Generator__SourceModelAssignment_2)
{ after(grammarAccess.getGeneratorAccess().getSourceModelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group__3__Impl
	rule__Generator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getTargetModelAssignment_3()); }
(rule__Generator__TargetModelAssignment_3)
{ after(grammarAccess.getGeneratorAccess().getTargetModelAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group__4__Impl
	rule__Generator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getGroup_4()); }
(rule__Generator__Group_4__0)?
{ after(grammarAccess.getGeneratorAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getGroup_5()); }
(rule__Generator__Group_5__0)?
{ after(grammarAccess.getGeneratorAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Generator__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group_4__0__Impl
	rule__Generator__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getHyphenMinusGreaterThanSignKeyword_4_0()); }

	'->' 

{ after(grammarAccess.getGeneratorAccess().getHyphenMinusGreaterThanSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generator__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getWriteTraceModelAssignment_4_1()); }
(rule__Generator__WriteTraceModelAssignment_4_1)
{ after(grammarAccess.getGeneratorAccess().getWriteTraceModelAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Generator__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group_5__0__Impl
	rule__Generator__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getLessThanSignHyphenMinusKeyword_5_0()); }

	'<-' 

{ after(grammarAccess.getGeneratorAccess().getLessThanSignHyphenMinusKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generator__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group_5__1__Impl
	rule__Generator__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getReadTraceModelsAssignment_5_1()); }
(rule__Generator__ReadTraceModelsAssignment_5_1)
{ after(grammarAccess.getGeneratorAccess().getReadTraceModelsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generator__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getGroup_5_2()); }
(rule__Generator__Group_5_2__0)*
{ after(grammarAccess.getGeneratorAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Generator__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group_5_2__0__Impl
	rule__Generator__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getCommaKeyword_5_2_0()); }

	',' 

{ after(grammarAccess.getGeneratorAccess().getCommaKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generator__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getReadTraceModelsAssignment_5_2_1()); }
(rule__Generator__ReadTraceModelsAssignment_5_2_1)
{ after(grammarAccess.getGeneratorAccess().getReadTraceModelsAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SourceModelNodeSelector__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceModelNodeSelector__Group_0__0__Impl
	rule__SourceModelNodeSelector__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceModelNodeSelector__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceModelNodeSelectorAccess().getReferenceAssignment_0_0()); }
(rule__SourceModelNodeSelector__ReferenceAssignment_0_0)
{ after(grammarAccess.getSourceModelNodeSelectorAccess().getReferenceAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SourceModelNodeSelector__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceModelNodeSelector__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceModelNodeSelector__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceModelNodeSelectorAccess().getGroup_0_1()); }
(rule__SourceModelNodeSelector__Group_0_1__0)?
{ after(grammarAccess.getSourceModelNodeSelectorAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SourceModelNodeSelector__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceModelNodeSelector__Group_0_1__0__Impl
	rule__SourceModelNodeSelector__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceModelNodeSelector__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceModelNodeSelectorAccess().getSolidusKeyword_0_1_0()); }

	'/' 

{ after(grammarAccess.getSourceModelNodeSelectorAccess().getSolidusKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SourceModelNodeSelector__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceModelNodeSelector__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceModelNodeSelector__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceModelNodeSelectorAccess().getPropertyAssignment_0_1_1()); }
(rule__SourceModelNodeSelector__PropertyAssignment_0_1_1)
{ after(grammarAccess.getSourceModelNodeSelectorAccess().getPropertyAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SourceModelNodeSelector__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceModelNodeSelector__Group_1__0__Impl
	rule__SourceModelNodeSelector__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceModelNodeSelector__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceModelNodeSelectorAccess().getSourceModelNodeSelectorAction_1_0()); }
(

)
{ after(grammarAccess.getSourceModelNodeSelectorAccess().getSourceModelNodeSelectorAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SourceModelNodeSelector__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SourceModelNodeSelector__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceModelNodeSelector__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceModelNodeSelectorAccess().getNullKeyword_1_1()); }

	'null' 

{ after(grammarAccess.getSourceModelNodeSelectorAccess().getNullKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TargetModelNodeType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TargetModelNodeType__Group__0__Impl
	rule__TargetModelNodeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelNodeType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetModelNodeTypeAccess().getTargetModelNodeTypeAction_0()); }
(

)
{ after(grammarAccess.getTargetModelNodeTypeAccess().getTargetModelNodeTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TargetModelNodeType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TargetModelNodeType__Group__1__Impl
	rule__TargetModelNodeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelNodeType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetModelNodeTypeAccess().getReferenceAssignment_1()); }
(rule__TargetModelNodeType__ReferenceAssignment_1)?
{ after(grammarAccess.getTargetModelNodeTypeAccess().getReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TargetModelNodeType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TargetModelNodeType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelNodeType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetModelNodeTypeAccess().getMultiplyAssignment_2()); }
(rule__TargetModelNodeType__MultiplyAssignment_2)?
{ after(grammarAccess.getTargetModelNodeTypeAccess().getMultiplyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModelNodeType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelNodeType__Group__0__Impl
	rule__ModelNodeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelNodeType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNodeTypeAccess().getTargetAssignment_0()); }
(rule__ModelNodeType__TargetAssignment_0)
{ after(grammarAccess.getModelNodeTypeAccess().getTargetAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelNodeType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelNodeType__Group__1__Impl
	rule__ModelNodeType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelNodeType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNodeTypeAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getModelNodeTypeAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelNodeType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelNodeType__Group__2__Impl
	rule__ModelNodeType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelNodeType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNodeTypeAccess().getTypeAssignment_2()); }
(rule__ModelNodeType__TypeAssignment_2)
{ after(grammarAccess.getModelNodeTypeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelNodeType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelNodeType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelNodeType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNodeTypeAccess().getGroup_3()); }
(rule__ModelNodeType__Group_3__0)?
{ after(grammarAccess.getModelNodeTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ModelNodeType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelNodeType__Group_3__0__Impl
	rule__ModelNodeType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelNodeType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNodeTypeAccess().getSolidusKeyword_3_0()); }

	'/' 

{ after(grammarAccess.getModelNodeTypeAccess().getSolidusKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelNodeType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelNodeType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelNodeType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNodeTypeAccess().getPropertyAssignment_3_1()); }
(rule__ModelNodeType__PropertyAssignment_3_1)
{ after(grammarAccess.getModelNodeTypeAccess().getPropertyAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NodeProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeProperty__Group__0__Impl
	rule__NodeProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodePropertyAccess().getPropertyAssignment_0()); }
(rule__NodeProperty__PropertyAssignment_0)
{ after(grammarAccess.getNodePropertyAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeProperty__Group__1__Impl
	rule__NodeProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodePropertyAccess().getGroup_1()); }
(rule__NodeProperty__Group_1__0)?
{ after(grammarAccess.getNodePropertyAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodePropertyAccess().getGroup_2()); }
(rule__NodeProperty__Group_2__0)?
{ after(grammarAccess.getNodePropertyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NodeProperty__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeProperty__Group_1__0__Impl
	rule__NodeProperty__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeProperty__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodePropertyAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getNodePropertyAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeProperty__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeProperty__Group_1__1__Impl
	rule__NodeProperty__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeProperty__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodePropertyAccess().getConstraintAssignment_1_1()); }
(rule__NodeProperty__ConstraintAssignment_1_1)
{ after(grammarAccess.getNodePropertyAccess().getConstraintAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeProperty__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeProperty__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeProperty__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodePropertyAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getNodePropertyAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NodeProperty__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeProperty__Group_2__0__Impl
	rule__NodeProperty__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeProperty__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodePropertyAccess().getSolidusKeyword_2_0()); }

	'/' 

{ after(grammarAccess.getNodePropertyAccess().getSolidusKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeProperty__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeProperty__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeProperty__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodePropertyAccess().getSubPropertyAssignment_2_1()); }
(rule__NodeProperty__SubPropertyAssignment_2_1)
{ after(grammarAccess.getNodePropertyAccess().getSubPropertyAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstraintExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintExpression__Group__0__Impl
	rule__ConstraintExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintExpressionAccess().getCompareExpressionParserRuleCall_0()); }
	ruleCompareExpression
{ after(grammarAccess.getConstraintExpressionAccess().getCompareExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintExpressionAccess().getGroup_1()); }
(rule__ConstraintExpression__Group_1__0)?
{ after(grammarAccess.getConstraintExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstraintExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintExpression__Group_1__0__Impl
	rule__ConstraintExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintExpressionAccess().getGroup_1_0()); }
(rule__ConstraintExpression__Group_1_0__0)
{ after(grammarAccess.getConstraintExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintExpressionAccess().getRightAssignment_1_1()); }
(rule__ConstraintExpression__RightAssignment_1_1)
{ after(grammarAccess.getConstraintExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstraintExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintExpressionAccess().getGroup_1_0_0()); }
(rule__ConstraintExpression__Group_1_0_0__0)
{ after(grammarAccess.getConstraintExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ConstraintExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintExpression__Group_1_0_0__0__Impl
	rule__ConstraintExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintExpressionAccess().getConstraintExpressionLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getConstraintExpressionAccess().getConstraintExpressionLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintExpressionAccess().getOperatorAssignment_1_0_0_1()); }
(rule__ConstraintExpression__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getConstraintExpressionAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group__0__Impl
	rule__CompareExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getBasicConstraintParserRuleCall_0()); }
	ruleBasicConstraint
{ after(grammarAccess.getCompareExpressionAccess().getBasicConstraintParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getGroup_1()); }
(rule__CompareExpression__Group_1__0)?
{ after(grammarAccess.getCompareExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1__0__Impl
	rule__CompareExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getGroup_1_0()); }
(rule__CompareExpression__Group_1_0__0)
{ after(grammarAccess.getCompareExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getRightAssignment_1_1()); }
(rule__CompareExpression__RightAssignment_1_1)
{ after(grammarAccess.getCompareExpressionAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getGroup_1_0_0()); }
(rule__CompareExpression__Group_1_0_0__0)
{ after(grammarAccess.getCompareExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__CompareExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1_0_0__0__Impl
	rule__CompareExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getConstraintExpressionLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getCompareExpressionAccess().getConstraintExpressionLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getOperatorAssignment_1_0_0_1()); }
(rule__CompareExpression__OperatorAssignment_1_0_0_1)
{ after(grammarAccess.getCompareExpressionAccess().getOperatorAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParenthesisConstraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesisConstraint__Group__0__Impl
	rule__ParenthesisConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisConstraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisConstraintAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParenthesisConstraintAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesisConstraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesisConstraint__Group__1__Impl
	rule__ParenthesisConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisConstraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisConstraintAccess().getConstraintAssignment_1()); }
(rule__ParenthesisConstraint__ConstraintAssignment_1)
{ after(grammarAccess.getParenthesisConstraintAccess().getConstraintAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesisConstraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesisConstraint__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisConstraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisConstraintAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParenthesisConstraintAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TraceModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceModel__Group__0__Impl
	rule__TraceModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceModelAccess().getNameAssignment_0()); }
(rule__TraceModel__NameAssignment_0)
{ after(grammarAccess.getTraceModelAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceModel__Group__1__Impl
	rule__TraceModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceModelAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getTraceModelAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceModel__Group__2__Impl
	rule__TraceModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTraceModelAccess().getNodeSetRelationsAssignment_2()); }
(rule__TraceModel__NodeSetRelationsAssignment_2)
{ after(grammarAccess.getTraceModelAccess().getNodeSetRelationsAssignment_2()); }
)
(
{ before(grammarAccess.getTraceModelAccess().getNodeSetRelationsAssignment_2()); }
(rule__TraceModel__NodeSetRelationsAssignment_2)*
{ after(grammarAccess.getTraceModelAccess().getNodeSetRelationsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceModel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceModelAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getTraceModelAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NodeSetRelation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeSetRelation__Group__0__Impl
	rule__NodeSetRelation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getNodeSetRelationAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeSetRelation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeSetRelation__Group__1__Impl
	rule__NodeSetRelation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getSourceNodesAssignment_1()); }
(rule__NodeSetRelation__SourceNodesAssignment_1)
{ after(grammarAccess.getNodeSetRelationAccess().getSourceNodesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeSetRelation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeSetRelation__Group__2__Impl
	rule__NodeSetRelation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getGroup_2()); }
(rule__NodeSetRelation__Group_2__0)*
{ after(grammarAccess.getNodeSetRelationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeSetRelation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeSetRelation__Group__3__Impl
	rule__NodeSetRelation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getNodeSetRelationAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeSetRelation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeSetRelation__Group__4__Impl
	rule__NodeSetRelation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getTargetNodesAssignment_4()); }
(rule__NodeSetRelation__TargetNodesAssignment_4)
{ after(grammarAccess.getNodeSetRelationAccess().getTargetNodesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeSetRelation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeSetRelation__Group__5__Impl
	rule__NodeSetRelation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getGroup_5()); }
(rule__NodeSetRelation__Group_5__0)*
{ after(grammarAccess.getNodeSetRelationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeSetRelation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeSetRelation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getNodeSetRelationAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__NodeSetRelation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeSetRelation__Group_2__0__Impl
	rule__NodeSetRelation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getNodeSetRelationAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeSetRelation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeSetRelation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getSourceNodesAssignment_2_1()); }
(rule__NodeSetRelation__SourceNodesAssignment_2_1)
{ after(grammarAccess.getNodeSetRelationAccess().getSourceNodesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NodeSetRelation__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeSetRelation__Group_5__0__Impl
	rule__NodeSetRelation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getNodeSetRelationAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NodeSetRelation__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NodeSetRelation__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getTargetNodesAssignment_5_1()); }
(rule__NodeSetRelation__TargetNodesAssignment_5_1)
{ after(grammarAccess.getNodeSetRelationAccess().getTargetNodesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__0__Impl
	rule__ArrayLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getArrayLiteralAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__1__Impl
	rule__ArrayLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getLiteralsAssignment_1()); }
(rule__ArrayLiteral__LiteralsAssignment_1)
{ after(grammarAccess.getArrayLiteralAccess().getLiteralsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__2__Impl
	rule__ArrayLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getGroup_2()); }
(rule__ArrayLiteral__Group_2__0)*
{ after(grammarAccess.getArrayLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getArrayLiteralAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArrayLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group_2__0__Impl
	rule__ArrayLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getArrayLiteralAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getLiteralsAssignment_2_1()); }
(rule__ArrayLiteral__LiteralsAssignment_2_1)
{ after(grammarAccess.getArrayLiteralAccess().getLiteralsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup_1()); }
(rule__QualifiedNameWithWildcard__Group_1__0)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildcard__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group_1__0__Impl
	rule__QualifiedNameWithWildcard__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_1_1()); }

	'*' 

{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getAsteriskKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getModelAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_3_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RegisteredPackagesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRegisteredPackagesRegisteredPackageParserRuleCall_4_0()); }
	ruleRegisteredPackage{ after(grammarAccess.getModelAccess().getRegisteredPackagesRegisteredPackageParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ConnectionsAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getConnectionsConnectionParserRuleCall_5_0_0()); }
	ruleConnection{ after(grammarAccess.getModelAccess().getConnectionsConnectionParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__MetamodelsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMetamodelsMetamodelSequenceParserRuleCall_5_1_0()); }
	ruleMetamodelSequence{ after(grammarAccess.getModelAccess().getMetamodelsMetamodelSequenceParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeaverImport__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeaverImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getWeaverImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GeneratorImport__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getGeneratorImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelSequence__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelSequenceAccess().getTypeModelNodeTypeParserRuleCall_1_0()); }
	ruleModelNodeType{ after(grammarAccess.getMetamodelSequenceAccess().getTypeModelNodeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelSequence__MetamodelsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelSequenceAccess().getMetamodelsMetamodelParserRuleCall_2_0()); }
	ruleMetamodel{ after(grammarAccess.getMetamodelSequenceAccess().getMetamodelsMetamodelParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelSequence__MetamodelsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelSequenceAccess().getMetamodelsMetamodelParserRuleCall_3_1_0()); }
	ruleMetamodel{ after(grammarAccess.getMetamodelSequenceAccess().getMetamodelsMetamodelParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Metamodel__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getMetamodelAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRegisteredPackageAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__ImportedNamespaceAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_2_0_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getRegisteredPackageAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__IsTextAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getIsTextTextKeyword_2_1_0_0()); }
(
{ before(grammarAccess.getRegisteredPackageAccess().getIsTextTextKeyword_2_1_0_0()); }

	'text' 

{ after(grammarAccess.getRegisteredPackageAccess().getIsTextTextKeyword_2_1_0_0()); }
)

{ after(grammarAccess.getRegisteredPackageAccess().getIsTextTextKeyword_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegisteredPackage__ExtensionAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegisteredPackageAccess().getExtensionSTRINGTerminalRuleCall_2_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getRegisteredPackageAccess().getExtensionSTRINGTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Weaver__WeaverAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeaverAccess().getWeaverWeaverImportCrossReference_1_0()); }
(
{ before(grammarAccess.getWeaverAccess().getWeaverWeaverImportIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getWeaverAccess().getWeaverWeaverImportIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getWeaverAccess().getWeaverWeaverImportCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Weaver__SourceModelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeaverAccess().getSourceModelSourceModelNodeSelectorParserRuleCall_2_0()); }
	ruleSourceModelNodeSelector{ after(grammarAccess.getWeaverAccess().getSourceModelSourceModelNodeSelectorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Weaver__AspectModelAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeaverAccess().getAspectModelAspectModelParserRuleCall_3_0()); }
	ruleAspectModel{ after(grammarAccess.getWeaverAccess().getAspectModelAspectModelParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Weaver__TargetModelAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeaverAccess().getTargetModelTargetModelNodeTypeParserRuleCall_4_1_0()); }
	ruleTargetModelNodeType{ after(grammarAccess.getWeaverAccess().getTargetModelTargetModelNodeTypeParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__GeneratorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getGeneratorGeneratorImportCrossReference_1_0()); }
(
{ before(grammarAccess.getGeneratorAccess().getGeneratorGeneratorImportIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getGeneratorAccess().getGeneratorGeneratorImportIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getGeneratorAccess().getGeneratorGeneratorImportCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__SourceModelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getSourceModelSourceModelNodeSelectorParserRuleCall_2_0()); }
	ruleSourceModelNodeSelector{ after(grammarAccess.getGeneratorAccess().getSourceModelSourceModelNodeSelectorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__TargetModelAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getTargetModelTargetModelNodeTypeParserRuleCall_3_0()); }
	ruleTargetModelNodeType{ after(grammarAccess.getGeneratorAccess().getTargetModelTargetModelNodeTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__WriteTraceModelAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getWriteTraceModelTraceModelParserRuleCall_4_1_0()); }
	ruleTraceModel{ after(grammarAccess.getGeneratorAccess().getWriteTraceModelTraceModelParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__ReadTraceModelsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getReadTraceModelsTraceModelCrossReference_5_1_0()); }
(
{ before(grammarAccess.getGeneratorAccess().getReadTraceModelsTraceModelIDTerminalRuleCall_5_1_0_1()); }
	RULE_ID{ after(grammarAccess.getGeneratorAccess().getReadTraceModelsTraceModelIDTerminalRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getGeneratorAccess().getReadTraceModelsTraceModelCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__ReadTraceModelsAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getReadTraceModelsTraceModelCrossReference_5_2_1_0()); }
(
{ before(grammarAccess.getGeneratorAccess().getReadTraceModelsTraceModelIDTerminalRuleCall_5_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getGeneratorAccess().getReadTraceModelsTraceModelIDTerminalRuleCall_5_2_1_0_1()); }
)
{ after(grammarAccess.getGeneratorAccess().getReadTraceModelsTraceModelCrossReference_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SourceModelNodeSelector__ReferenceAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceModelNodeSelectorAccess().getReferenceMetamodelCrossReference_0_0_0()); }
(
{ before(grammarAccess.getSourceModelNodeSelectorAccess().getReferenceMetamodelIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getSourceModelNodeSelectorAccess().getReferenceMetamodelIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getSourceModelNodeSelectorAccess().getReferenceMetamodelCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SourceModelNodeSelector__PropertyAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSourceModelNodeSelectorAccess().getPropertyNodePropertyParserRuleCall_0_1_1_0()); }
	ruleNodeProperty{ after(grammarAccess.getSourceModelNodeSelectorAccess().getPropertyNodePropertyParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelNodeType__ReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetModelNodeTypeAccess().getReferenceMetamodelCrossReference_1_0()); }
(
{ before(grammarAccess.getTargetModelNodeTypeAccess().getReferenceMetamodelIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTargetModelNodeTypeAccess().getReferenceMetamodelIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getTargetModelNodeTypeAccess().getReferenceMetamodelCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TargetModelNodeType__MultiplyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetModelNodeTypeAccess().getMultiplyAsteriskKeyword_2_0()); }
(
{ before(grammarAccess.getTargetModelNodeTypeAccess().getMultiplyAsteriskKeyword_2_0()); }

	'*' 

{ after(grammarAccess.getTargetModelNodeTypeAccess().getMultiplyAsteriskKeyword_2_0()); }
)

{ after(grammarAccess.getTargetModelNodeTypeAccess().getMultiplyAsteriskKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelNodeType__TargetAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNodeTypeAccess().getTargetRegisteredPackageCrossReference_0_0()); }
(
{ before(grammarAccess.getModelNodeTypeAccess().getTargetRegisteredPackageIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getModelNodeTypeAccess().getTargetRegisteredPackageIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getModelNodeTypeAccess().getTargetRegisteredPackageCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelNodeType__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNodeTypeAccess().getTypeEClassCrossReference_2_0()); }
(
{ before(grammarAccess.getModelNodeTypeAccess().getTypeEClassIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getModelNodeTypeAccess().getTypeEClassIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getModelNodeTypeAccess().getTypeEClassCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelNodeType__PropertyAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelNodeTypeAccess().getPropertyNodePropertyParserRuleCall_3_1_0()); }
	ruleNodeProperty{ after(grammarAccess.getModelNodeTypeAccess().getPropertyNodePropertyParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeProperty__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodePropertyAccess().getPropertyEReferenceCrossReference_0_0()); }
(
{ before(grammarAccess.getNodePropertyAccess().getPropertyEReferenceIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getNodePropertyAccess().getPropertyEReferenceIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getNodePropertyAccess().getPropertyEReferenceCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeProperty__ConstraintAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodePropertyAccess().getConstraintConstraintExpressionParserRuleCall_1_1_0()); }
	ruleConstraintExpression{ after(grammarAccess.getNodePropertyAccess().getConstraintConstraintExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeProperty__SubPropertyAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodePropertyAccess().getSubPropertyNodePropertyParserRuleCall_2_1_0()); }
	ruleNodeProperty{ after(grammarAccess.getNodePropertyAccess().getSubPropertyNodePropertyParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintExpression__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintExpressionAccess().getOperatorLogicOperatorParserRuleCall_1_0_0_1_0()); }
	ruleLogicOperator{ after(grammarAccess.getConstraintExpressionAccess().getOperatorLogicOperatorParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintExpressionAccess().getRightConstraintExpressionParserRuleCall_1_1_0()); }
	ruleConstraintExpression{ after(grammarAccess.getConstraintExpressionAccess().getRightConstraintExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__OperatorAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getOperatorComparatorParserRuleCall_1_0_0_1_0()); }
	ruleComparator{ after(grammarAccess.getCompareExpressionAccess().getOperatorComparatorParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareExpressionAccess().getRightBasicConstraintParserRuleCall_1_1_0()); }
	ruleBasicConstraint{ after(grammarAccess.getCompareExpressionAccess().getRightBasicConstraintParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesisConstraint__ConstraintAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesisConstraintAccess().getConstraintConstraintExpressionParserRuleCall_1_0()); }
	ruleConstraintExpression{ after(grammarAccess.getParenthesisConstraintAccess().getConstraintConstraintExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceModel__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceModelAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTraceModelAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceModel__NodeSetRelationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceModelAccess().getNodeSetRelationsNodeSetRelationParserRuleCall_2_0()); }
	ruleNodeSetRelation{ after(grammarAccess.getTraceModelAccess().getNodeSetRelationsNodeSetRelationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__SourceNodesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getSourceNodesNodeTypeParserRuleCall_1_0()); }
	ruleNodeType{ after(grammarAccess.getNodeSetRelationAccess().getSourceNodesNodeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__SourceNodesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getSourceNodesNodeTypeParserRuleCall_2_1_0()); }
	ruleNodeType{ after(grammarAccess.getNodeSetRelationAccess().getSourceNodesNodeTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__TargetNodesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getTargetNodesNodeTypeParserRuleCall_4_0()); }
	ruleNodeType{ after(grammarAccess.getNodeSetRelationAccess().getTargetNodesNodeTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeSetRelation__TargetNodesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeSetRelationAccess().getTargetNodesNodeTypeParserRuleCall_5_1_0()); }
	ruleNodeType{ after(grammarAccess.getNodeSetRelationAccess().getTargetNodesNodeTypeParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__EclassAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNodeTypeAccess().getEclassEClassCrossReference_0()); }
(
{ before(grammarAccess.getNodeTypeAccess().getEclassEClassIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getNodeTypeAccess().getEclassEClassIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getNodeTypeAccess().getEclassEClassCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__LiteralsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getLiteralsLiteralParserRuleCall_1_0()); }
	ruleLiteral{ after(grammarAccess.getArrayLiteralAccess().getLiteralsLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayLiteral__LiteralsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayLiteralAccess().getLiteralsLiteralParserRuleCall_2_1_0()); }
	ruleLiteral{ after(grammarAccess.getArrayLiteralAccess().getLiteralsLiteralParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_0()); }
	RULE_FLOAT{ after(grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueBOOLEANTerminalRuleCall_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getBooleanLiteralAccess().getValueBOOLEANTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOperator__ANDAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOperatorAccess().getANDAmpersandKeyword_0_0()); }
(
{ before(grammarAccess.getLogicOperatorAccess().getANDAmpersandKeyword_0_0()); }

	'&' 

{ after(grammarAccess.getLogicOperatorAccess().getANDAmpersandKeyword_0_0()); }
)

{ after(grammarAccess.getLogicOperatorAccess().getANDAmpersandKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicOperator__ORAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicOperatorAccess().getORVerticalLineKeyword_1_0()); }
(
{ before(grammarAccess.getLogicOperatorAccess().getORVerticalLineKeyword_1_0()); }

	'|' 

{ after(grammarAccess.getLogicOperatorAccess().getORVerticalLineKeyword_1_0()); }
)

{ after(grammarAccess.getLogicOperatorAccess().getORVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__EQAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparatorAccess().getEQEqualsSignEqualsSignKeyword_0_0()); }
(
{ before(grammarAccess.getComparatorAccess().getEQEqualsSignEqualsSignKeyword_0_0()); }

	'==' 

{ after(grammarAccess.getComparatorAccess().getEQEqualsSignEqualsSignKeyword_0_0()); }
)

{ after(grammarAccess.getComparatorAccess().getEQEqualsSignEqualsSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__NEAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparatorAccess().getNEExclamationMarkEqualsSignKeyword_1_0()); }
(
{ before(grammarAccess.getComparatorAccess().getNEExclamationMarkEqualsSignKeyword_1_0()); }

	'!=' 

{ after(grammarAccess.getComparatorAccess().getNEExclamationMarkEqualsSignKeyword_1_0()); }
)

{ after(grammarAccess.getComparatorAccess().getNEExclamationMarkEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__GRAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparatorAccess().getGRGreaterThanSignKeyword_2_0()); }
(
{ before(grammarAccess.getComparatorAccess().getGRGreaterThanSignKeyword_2_0()); }

	'>' 

{ after(grammarAccess.getComparatorAccess().getGRGreaterThanSignKeyword_2_0()); }
)

{ after(grammarAccess.getComparatorAccess().getGRGreaterThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__LWAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparatorAccess().getLWLessThanSignKeyword_3_0()); }
(
{ before(grammarAccess.getComparatorAccess().getLWLessThanSignKeyword_3_0()); }

	'<' 

{ after(grammarAccess.getComparatorAccess().getLWLessThanSignKeyword_3_0()); }
)

{ after(grammarAccess.getComparatorAccess().getLWLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__GEAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparatorAccess().getGEGreaterThanSignEqualsSignKeyword_4_0()); }
(
{ before(grammarAccess.getComparatorAccess().getGEGreaterThanSignEqualsSignKeyword_4_0()); }

	'>=' 

{ after(grammarAccess.getComparatorAccess().getGEGreaterThanSignEqualsSignKeyword_4_0()); }
)

{ after(grammarAccess.getComparatorAccess().getGEGreaterThanSignEqualsSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__LEAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparatorAccess().getLELessThanSignEqualsSignKeyword_5_0()); }
(
{ before(grammarAccess.getComparatorAccess().getLELessThanSignEqualsSignKeyword_5_0()); }

	'<=' 

{ after(grammarAccess.getComparatorAccess().getLELessThanSignEqualsSignKeyword_5_0()); }
)

{ after(grammarAccess.getComparatorAccess().getLELessThanSignEqualsSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__LIKEAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparatorAccess().getLIKETildeKeyword_6_0()); }
(
{ before(grammarAccess.getComparatorAccess().getLIKETildeKeyword_6_0()); }

	'~' 

{ after(grammarAccess.getComparatorAccess().getLIKETildeKeyword_6_0()); }
)

{ after(grammarAccess.getComparatorAccess().getLIKETildeKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


fragment RULE_DIGIT : '0'..'9';

RULE_INT : '-'? RULE_DIGIT+;

RULE_FLOAT : ('-'? RULE_DIGIT+ '.' RULE_DIGIT* (('e'|'E') ('+'|'-')? RULE_DIGIT+)? 'f'?|'-'? RULE_DIGIT+ 'f');

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


