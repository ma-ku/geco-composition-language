/*
 * generated by Xtext 2.10.0
 */
grammar InternalArchitecture;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.cau.cs.se.geco.architecture.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.cau.cs.se.geco.architecture.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.se.geco.architecture.services.ArchitectureGrammarAccess;

}

@parser::members {

 	private ArchitectureGrammarAccess grammarAccess;

    public InternalArchitectureParser(TokenStream input, ArchitectureGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "GecoModel";
   	}

   	@Override
   	protected ArchitectureGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGecoModel
entryRuleGecoModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGecoModelRule()); }
	iv_ruleGecoModel=ruleGecoModel
	{ $current=$iv_ruleGecoModel.current; }
	EOF;

// Rule GecoModel
ruleGecoModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getGecoModelAccess().getPackageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGecoModelAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGecoModelRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"de.cau.cs.se.geco.architecture.Architecture.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGecoModelAccess().getImportsImportParserRuleCall_2_0());
				}
				lv_imports_2_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGecoModelRule());
					}
					add(
						$current,
						"imports",
						lv_imports_2_0,
						"de.cau.cs.se.geco.architecture.Architecture.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getGecoModelAccess().getRegisteredRootClassRegisteredRootClassParserRuleCall_3_0());
				}
				lv_registeredRootClass_3_0=ruleRegisteredRootClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGecoModelRule());
					}
					add(
						$current,
						"registeredRootClass",
						lv_registeredRootClass_3_0,
						"de.cau.cs.se.geco.architecture.Architecture.RegisteredRootClass");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getGecoModelAccess().getModelsModelSequenceParserRuleCall_4_0());
				}
				lv_models_4_0=ruleModelSequence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGecoModelRule());
					}
					add(
						$current,
						"models",
						lv_models_4_0,
						"de.cau.cs.se.geco.architecture.Architecture.ModelSequence");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getGecoModelAccess().getFragmentsFragmentParserRuleCall_5_0());
				}
				lv_fragments_5_0=ruleFragment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGecoModelRule());
					}
					add(
						$current,
						"fragments",
						lv_fragments_5_0,
						"de.cau.cs.se.geco.architecture.Architecture.Fragment");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceJvmTypeCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRegisteredRootClass
entryRuleRegisteredRootClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegisteredRootClassRule()); }
	iv_ruleRegisteredRootClass=ruleRegisteredRootClass
	{ $current=$iv_ruleRegisteredRootClass.current; }
	EOF;

// Rule RegisteredRootClass
ruleRegisteredRootClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='register'
		{
			newLeafNode(otherlv_0, grammarAccess.getRegisteredRootClassAccess().getRegisterKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRegisteredRootClassAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegisteredRootClassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRegisteredRootClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRegisteredRootClassAccess().getImportedNamespaceJvmTypeCrossReference_2_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						lv_isText_3_0='text'
						{
							newLeafNode(lv_isText_3_0, grammarAccess.getRegisteredRootClassAccess().getIsTextTextKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRegisteredRootClassRule());
							}
							setWithLastConsumed($current, "isText", true, "text");
						}
					)
				)
				(
					(
						lv_extension_4_0=RULE_STRING
						{
							newLeafNode(lv_extension_4_0, grammarAccess.getRegisteredRootClassAccess().getExtensionSTRINGTerminalRuleCall_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRegisteredRootClassRule());
							}
							setWithLastConsumed(
								$current,
								"extension",
								lv_extension_4_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleModelSequence
entryRuleModelSequence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelSequenceRule()); }
	iv_ruleModelSequence=ruleModelSequence
	{ $current=$iv_ruleModelSequence.current; }
	EOF;

// Rule ModelSequence
ruleModelSequence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='model'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelSequenceAccess().getModelKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelSequenceAccess().getModifierModelModifierEnumRuleCall_1_0());
				}
				lv_modifier_1_0=ruleModelModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelSequenceRule());
					}
					set(
						$current,
						"modifier",
						lv_modifier_1_0,
						"de.cau.cs.se.geco.architecture.Architecture.ModelModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelSequenceAccess().getTypeModelTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleModelType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelSequenceRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"de.cau.cs.se.geco.architecture.Architecture.ModelType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelSequenceAccess().getModelsModelParserRuleCall_3_0());
				}
				lv_models_3_0=ruleModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelSequenceRule());
					}
					add(
						$current,
						"models",
						lv_models_3_0,
						"de.cau.cs.se.geco.architecture.Architecture.Model");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getModelSequenceAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelSequenceAccess().getModelsModelParserRuleCall_4_1_0());
					}
					lv_models_5_0=ruleModel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelSequenceRule());
						}
						add(
							$current,
							"models",
							lv_models_5_0,
							"de.cau.cs.se.geco.architecture.Architecture.Model");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getModelRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleFragment
entryRuleFragment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFragmentRule()); }
	iv_ruleFragment=ruleFragment
	{ $current=$iv_ruleFragment.current; }
	EOF;

// Rule Fragment
ruleFragment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFragmentAccess().getGeneratorParserRuleCall_0());
		}
		this_Generator_0=ruleGenerator
		{
			$current = $this_Generator_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFragmentAccess().getWeaverParserRuleCall_1());
		}
		this_Weaver_1=ruleWeaver
		{
			$current = $this_Weaver_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleWeaver
entryRuleWeaver returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWeaverRule()); }
	iv_ruleWeaver=ruleWeaver
	{ $current=$iv_ruleWeaver.current; }
	EOF;

// Rule Weaver
ruleWeaver returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='weave'
		{
			newLeafNode(otherlv_0, grammarAccess.getWeaverAccess().getWeaveKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWeaverRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getWeaverAccess().getReferenceJvmTypeCrossReference_1_0());
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getWeaverAccess().getSourceModelSourceModelSelectorParserRuleCall_2_0_0());
					}
					lv_sourceModel_2_0=ruleSourceModelSelector
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWeaverRule());
						}
						set(
							$current,
							"sourceModel",
							lv_sourceModel_2_0,
							"de.cau.cs.se.geco.architecture.Architecture.SourceModelSelector");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_3='link'
			{
				newLeafNode(otherlv_3, grammarAccess.getWeaverAccess().getLinkKeyword_2_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWeaverAccess().getAspectModelAspectModelParserRuleCall_3_0());
				}
				lv_aspectModel_4_0=ruleAspectModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWeaverRule());
					}
					set(
						$current,
						"aspectModel",
						lv_aspectModel_4_0,
						"de.cau.cs.se.geco.architecture.Architecture.AspectModel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='=>'
			{
				newLeafNode(otherlv_5, grammarAccess.getWeaverAccess().getEqualsSignGreaterThanSignKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWeaverAccess().getTargetModelTargetModelParserRuleCall_4_1_0());
					}
					lv_targetModel_6_0=ruleTargetModel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWeaverRule());
						}
						set(
							$current,
							"targetModel",
							lv_targetModel_6_0,
							"de.cau.cs.se.geco.architecture.Architecture.TargetModel");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAspectModel
entryRuleAspectModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAspectModelRule()); }
	iv_ruleAspectModel=ruleAspectModel
	{ $current=$iv_ruleAspectModel.current; }
	EOF;

// Rule AspectModel
ruleAspectModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAspectModelAccess().getCombinedModelParserRuleCall_0());
		}
		this_CombinedModel_0=ruleCombinedModel
		{
			$current = $this_CombinedModel_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAspectModelAccess().getSeparateModelsParserRuleCall_1());
		}
		this_SeparateModels_1=ruleSeparateModels
		{
			$current = $this_SeparateModels_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSeparateModels
entryRuleSeparateModels returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSeparateModelsRule()); }
	iv_ruleSeparateModels=ruleSeparateModels
	{ $current=$iv_ruleSeparateModels.current; }
	EOF;

// Rule SeparateModels
ruleSeparateModels returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='pointcut'
		{
			newLeafNode(otherlv_0, grammarAccess.getSeparateModelsAccess().getPointcutKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSeparateModelsAccess().getPointcutTargetModelParserRuleCall_1_0());
				}
				lv_pointcut_1_0=ruleTargetModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSeparateModelsRule());
					}
					set(
						$current,
						"pointcut",
						lv_pointcut_1_0,
						"de.cau.cs.se.geco.architecture.Architecture.TargetModel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='advice'
		{
			newLeafNode(otherlv_2, grammarAccess.getSeparateModelsAccess().getAdviceKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSeparateModelsAccess().getAdviceCombinedModelParserRuleCall_3_0());
				}
				lv_advice_3_0=ruleCombinedModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSeparateModelsRule());
					}
					set(
						$current,
						"advice",
						lv_advice_3_0,
						"de.cau.cs.se.geco.architecture.Architecture.CombinedModel");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCombinedModel
entryRuleCombinedModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCombinedModelRule()); }
	iv_ruleCombinedModel=ruleCombinedModel
	{ $current=$iv_ruleCombinedModel.current; }
	EOF;

// Rule CombinedModel
ruleCombinedModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCombinedModelAccess().getTargetModelParserRuleCall_0());
		}
		this_TargetModel_0=ruleTargetModel
		{
			$current = $this_TargetModel_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCombinedModelAccess().getGeneratorParserRuleCall_1());
		}
		this_Generator_1=ruleGenerator
		{
			$current = $this_Generator_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleGenerator
entryRuleGenerator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGeneratorRule()); }
	iv_ruleGenerator=ruleGenerator
	{ $current=$iv_ruleGenerator.current; }
	EOF;

// Rule Generator
ruleGenerator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='generate'
		{
			newLeafNode(otherlv_0, grammarAccess.getGeneratorAccess().getGenerateKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGeneratorRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getGeneratorAccess().getReferenceJvmTypeCrossReference_1_0());
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getGeneratorAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeneratorAccess().getSourceAuxModelsSourceModelSelectorParserRuleCall_2_1_0());
					}
					lv_sourceAuxModels_3_0=ruleSourceModelSelector
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeneratorRule());
						}
						add(
							$current,
							"sourceAuxModels",
							lv_sourceAuxModels_3_0,
							"de.cau.cs.se.geco.architecture.Architecture.SourceModelSelector");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getGeneratorAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGeneratorAccess().getSourceAuxModelsSourceModelSelectorParserRuleCall_2_2_1_0());
						}
						lv_sourceAuxModels_5_0=ruleSourceModelSelector
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGeneratorRule());
							}
							add(
								$current,
								"sourceAuxModels",
								lv_sourceAuxModels_5_0,
								"de.cau.cs.se.geco.architecture.Architecture.SourceModelSelector");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getGeneratorAccess().getRightParenthesisKeyword_2_3());
			}
		)?
		otherlv_7='source'
		{
			newLeafNode(otherlv_7, grammarAccess.getGeneratorAccess().getSourceKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGeneratorAccess().getSourceModelSourceModelSelectorParserRuleCall_4_0());
				}
				lv_sourceModel_8_0=ruleSourceModelSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGeneratorRule());
					}
					set(
						$current,
						"sourceModel",
						lv_sourceModel_8_0,
						"de.cau.cs.se.geco.architecture.Architecture.SourceModelSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='target'
			{
				newLeafNode(otherlv_9, grammarAccess.getGeneratorAccess().getTargetKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGeneratorAccess().getTargetModelTargetModelParserRuleCall_5_1_0());
					}
					lv_targetModel_10_0=ruleTargetModel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGeneratorRule());
						}
						set(
							$current,
							"targetModel",
							lv_targetModel_10_0,
							"de.cau.cs.se.geco.architecture.Architecture.TargetModel");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='trace'
			{
				newLeafNode(otherlv_11, grammarAccess.getGeneratorAccess().getTraceKeyword_6_0());
			}
			(
				otherlv_12='out'
				{
					newLeafNode(otherlv_12, grammarAccess.getGeneratorAccess().getOutKeyword_6_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGeneratorAccess().getTargetTraceModelTargetTraceModelParserRuleCall_6_1_1_0());
						}
						lv_targetTraceModel_13_0=ruleTargetTraceModel
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGeneratorRule());
							}
							set(
								$current,
								"targetTraceModel",
								lv_targetTraceModel_13_0,
								"de.cau.cs.se.geco.architecture.Architecture.TargetTraceModel");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			(
				otherlv_14='in'
				{
					newLeafNode(otherlv_14, grammarAccess.getGeneratorAccess().getInKeyword_6_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGeneratorAccess().getSourceTraceModelsTraceModelReferenceParserRuleCall_6_2_1_0());
						}
						lv_sourceTraceModels_15_0=ruleTraceModelReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGeneratorRule());
							}
							add(
								$current,
								"sourceTraceModels",
								lv_sourceTraceModels_15_0,
								"de.cau.cs.se.geco.architecture.Architecture.TraceModelReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_16=','
					{
						newLeafNode(otherlv_16, grammarAccess.getGeneratorAccess().getCommaKeyword_6_2_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getGeneratorAccess().getSourceTraceModelsTraceModelReferenceParserRuleCall_6_2_2_1_0());
							}
							lv_sourceTraceModels_17_0=ruleTraceModelReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getGeneratorRule());
								}
								add(
									$current,
									"sourceTraceModels",
									lv_sourceTraceModels_17_0,
									"de.cau.cs.se.geco.architecture.Architecture.TraceModelReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
		)?
	)
;

// Entry rule entryRuleSourceModelSelector
entryRuleSourceModelSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceModelSelectorRule()); }
	iv_ruleSourceModelSelector=ruleSourceModelSelector
	{ $current=$iv_ruleSourceModelSelector.current; }
	EOF;

// Rule SourceModelSelector
ruleSourceModelSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSourceModelSelectorRule());
						}
					}
					otherlv_0=RULE_ID
					{
						newLeafNode(otherlv_0, grammarAccess.getSourceModelSelectorAccess().getReferenceModelCrossReference_0_0_0());
					}
				)
			)
			(
				otherlv_1='['
				{
					newLeafNode(otherlv_1, grammarAccess.getSourceModelSelectorAccess().getLeftSquareBracketKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSourceModelSelectorAccess().getConstraintConstraintExpressionParserRuleCall_0_1_1_0());
						}
						lv_constraint_2_0=ruleConstraintExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSourceModelSelectorRule());
							}
							set(
								$current,
								"constraint",
								lv_constraint_2_0,
								"de.cau.cs.se.geco.architecture.Architecture.ConstraintExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3=']'
				{
					newLeafNode(otherlv_3, grammarAccess.getSourceModelSelectorAccess().getRightSquareBracketKeyword_0_1_2());
				}
			)?
			(
				otherlv_4='/'
				{
					newLeafNode(otherlv_4, grammarAccess.getSourceModelSelectorAccess().getSolidusKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSourceModelSelectorAccess().getPropertyNodePropertyParserRuleCall_0_2_1_0());
						}
						lv_property_5_0=ruleNodeProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSourceModelSelectorRule());
							}
							set(
								$current,
								"property",
								lv_property_5_0,
								"de.cau.cs.se.geco.architecture.Architecture.NodeProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSourceModelSelectorAccess().getSourceModelSelectorAction_1_0(),
						$current);
				}
			)
			otherlv_7='null'
			{
				newLeafNode(otherlv_7, grammarAccess.getSourceModelSelectorAccess().getNullKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleTargetModel
entryRuleTargetModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTargetModelRule()); }
	iv_ruleTargetModel=ruleTargetModel
	{ $current=$iv_ruleTargetModel.current; }
	EOF;

// Rule TargetModel
ruleTargetModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTargetModelAccess().getTargetModelAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTargetModelRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getTargetModelAccess().getReferenceModelCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleModelType
entryRuleModelType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelTypeRule()); }
	iv_ruleModelType=ruleModelType
	{ $current=$iv_ruleModelType.current; }
	EOF;

// Rule ModelType
ruleModelType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelTypeRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getModelTypeAccess().getTargetRegisteredRootClassCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='/'
			{
				newLeafNode(otherlv_1, grammarAccess.getModelTypeAccess().getSolidusKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelTypeAccess().getPropertyNodePropertyParserRuleCall_1_1_0());
					}
					lv_property_2_0=ruleNodeProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelTypeRule());
						}
						set(
							$current,
							"property",
							lv_property_2_0,
							"de.cau.cs.se.geco.architecture.Architecture.NodeProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				lv_collection_3_0='[]'
				{
					newLeafNode(lv_collection_3_0, grammarAccess.getModelTypeAccess().getCollectionLeftSquareBracketRightSquareBracketKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelTypeRule());
					}
					setWithLastConsumed($current, "collection", true, "[]");
				}
			)
		)?
	)
;

// Entry rule entryRuleNodeProperty
entryRuleNodeProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodePropertyRule()); }
	iv_ruleNodeProperty=ruleNodeProperty
	{ $current=$iv_ruleNodeProperty.current; }
	EOF;

// Rule NodeProperty
ruleNodeProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodePropertyRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getNodePropertyAccess().getPropertyJvmMemberCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getNodePropertyAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodePropertyAccess().getConstraintConstraintExpressionParserRuleCall_1_1_0());
					}
					lv_constraint_2_0=ruleConstraintExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodePropertyRule());
						}
						set(
							$current,
							"constraint",
							lv_constraint_2_0,
							"de.cau.cs.se.geco.architecture.Architecture.ConstraintExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getNodePropertyAccess().getRightSquareBracketKeyword_1_2());
			}
		)?
		(
			otherlv_4='/'
			{
				newLeafNode(otherlv_4, grammarAccess.getNodePropertyAccess().getSolidusKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodePropertyAccess().getSubPropertyNodePropertyParserRuleCall_2_1_0());
					}
					lv_subProperty_5_0=ruleNodeProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodePropertyRule());
						}
						set(
							$current,
							"subProperty",
							lv_subProperty_5_0,
							"de.cau.cs.se.geco.architecture.Architecture.NodeProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConstraintExpression
entryRuleConstraintExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintExpressionRule()); }
	iv_ruleConstraintExpression=ruleConstraintExpression
	{ $current=$iv_ruleConstraintExpression.current; }
	EOF;

// Rule ConstraintExpression
ruleConstraintExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConstraintExpressionAccess().getCompareExpressionParserRuleCall_0());
		}
		this_CompareExpression_0=ruleCompareExpression
		{
			$current = $this_CompareExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleLogicOperator
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getConstraintExpressionAccess().getConstraintExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getConstraintExpressionAccess().getOperatorLogicOperatorEnumRuleCall_1_0_0_1_0());
							}
							lv_operator_2_0=ruleLogicOperator
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConstraintExpressionRule());
								}
								set(
									$current,
									"operator",
									lv_operator_2_0,
									"de.cau.cs.se.geco.architecture.Architecture.LogicOperator");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConstraintExpressionAccess().getRightConstraintExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleConstraintExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.cau.cs.se.geco.architecture.Architecture.ConstraintExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCompareExpression
entryRuleCompareExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareExpressionRule()); }
	iv_ruleCompareExpression=ruleCompareExpression
	{ $current=$iv_ruleCompareExpression.current; }
	EOF;

// Rule CompareExpression
ruleCompareExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCompareExpressionAccess().getBasicConstraintParserRuleCall_0());
		}
		this_BasicConstraint_0=ruleBasicConstraint
		{
			$current = $this_BasicConstraint_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							ruleComparator
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getCompareExpressionAccess().getCompareExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getCompareExpressionAccess().getComparatorComparatorEnumRuleCall_1_0_0_1_0());
							}
							lv_comparator_2_0=ruleComparator
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCompareExpressionRule());
								}
								set(
									$current,
									"comparator",
									lv_comparator_2_0,
									"de.cau.cs.se.geco.architecture.Architecture.Comparator");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCompareExpressionAccess().getRightBasicConstraintParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleBasicConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompareExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"de.cau.cs.se.geco.architecture.Architecture.BasicConstraint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleBasicConstraint
entryRuleBasicConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicConstraintRule()); }
	iv_ruleBasicConstraint=ruleBasicConstraint
	{ $current=$iv_ruleBasicConstraint.current; }
	EOF;

// Rule BasicConstraint
ruleBasicConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBasicConstraintAccess().getParenthesisConstraintParserRuleCall_0());
		}
		this_ParenthesisConstraint_0=ruleParenthesisConstraint
		{
			$current = $this_ParenthesisConstraint_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBasicConstraintAccess().getOperandParserRuleCall_1());
		}
		this_Operand_1=ruleOperand
		{
			$current = $this_Operand_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBasicConstraintAccess().getNegationParserRuleCall_2());
		}
		this_Negation_2=ruleNegation
		{
			$current = $this_Negation_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNegation
entryRuleNegation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNegationRule()); }
	iv_ruleNegation=ruleNegation
	{ $current=$iv_ruleNegation.current; }
	EOF;

// Rule Negation
ruleNegation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='!'
		{
			newLeafNode(otherlv_0, grammarAccess.getNegationAccess().getExclamationMarkKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNegationAccess().getConstraintConstraintExpressionParserRuleCall_1_0());
				}
				lv_constraint_1_0=ruleConstraintExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNegationRule());
					}
					set(
						$current,
						"constraint",
						lv_constraint_1_0,
						"de.cau.cs.se.geco.architecture.Architecture.ConstraintExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParenthesisConstraint
entryRuleParenthesisConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParenthesisConstraintRule()); }
	iv_ruleParenthesisConstraint=ruleParenthesisConstraint
	{ $current=$iv_ruleParenthesisConstraint.current; }
	EOF;

// Rule ParenthesisConstraint
ruleParenthesisConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParenthesisConstraintAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParenthesisConstraintAccess().getConstraintConstraintExpressionParserRuleCall_1_0());
				}
				lv_constraint_1_0=ruleConstraintExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParenthesisConstraintRule());
					}
					set(
						$current,
						"constraint",
						lv_constraint_1_0,
						"de.cau.cs.se.geco.architecture.Architecture.ConstraintExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getParenthesisConstraintAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleOperand
entryRuleOperand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperandRule()); }
	iv_ruleOperand=ruleOperand
	{ $current=$iv_ruleOperand.current; }
	EOF;

// Rule Operand
ruleOperand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperandAccess().getLiteralParserRuleCall_0());
		}
		this_Literal_0=ruleLiteral
		{
			$current = $this_Literal_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperandAccess().getNodePropertyParserRuleCall_1());
		}
		this_NodeProperty_1=ruleNodeProperty
		{
			$current = $this_NodeProperty_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperandAccess().getInstanceOfParserRuleCall_2());
		}
		this_InstanceOf_2=ruleInstanceOf
		{
			$current = $this_InstanceOf_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInstanceOf
entryRuleInstanceOf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstanceOfRule()); }
	iv_ruleInstanceOf=ruleInstanceOf
	{ $current=$iv_ruleInstanceOf.current; }
	EOF;

// Rule InstanceOf
ruleInstanceOf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='is'
		{
			newLeafNode(otherlv_0, grammarAccess.getInstanceOfAccess().getIsKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstanceOfRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getInstanceOfAccess().getTypeJvmTypeCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleTargetTraceModel
entryRuleTargetTraceModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTargetTraceModelRule()); }
	iv_ruleTargetTraceModel=ruleTargetTraceModel
	{ $current=$iv_ruleTargetTraceModel.current; }
	EOF;

// Rule TargetTraceModel
ruleTargetTraceModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTargetTraceModelAccess().getTraceModelParserRuleCall_0());
		}
		this_TraceModel_0=ruleTraceModel
		{
			$current = $this_TraceModel_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1='use'
			{
				newLeafNode(otherlv_1, grammarAccess.getTargetTraceModelAccess().getUseKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getTargetTraceModelAccess().getTraceModelReferenceParserRuleCall_1_1());
			}
			this_TraceModelReference_2=ruleTraceModelReference
			{
				$current = $this_TraceModelReference_2.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTraceModelReference
entryRuleTraceModelReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTraceModelReferenceRule()); }
	iv_ruleTraceModelReference=ruleTraceModelReference
	{ $current=$iv_ruleTraceModelReference.current; }
	EOF;

// Rule TraceModelReference
ruleTraceModelReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTraceModelReferenceRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getTraceModelReferenceAccess().getTraceModelTraceModelCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleTraceModel
entryRuleTraceModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTraceModelRule()); }
	iv_ruleTraceModel=ruleTraceModel
	{ $current=$iv_ruleTraceModel.current; }
	EOF;

// Rule TraceModel
ruleTraceModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTraceModelAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTraceModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getTraceModelAccess().getLessThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTraceModelAccess().getNodeSetRelationsNodeSetRelationParserRuleCall_2_0());
				}
				lv_nodeSetRelations_2_0=ruleNodeSetRelation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTraceModelRule());
					}
					add(
						$current,
						"nodeSetRelations",
						lv_nodeSetRelations_2_0,
						"de.cau.cs.se.geco.architecture.Architecture.NodeSetRelation");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getTraceModelAccess().getGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleNodeSetRelation
entryRuleNodeSetRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeSetRelationRule()); }
	iv_ruleNodeSetRelation=ruleNodeSetRelation
	{ $current=$iv_ruleNodeSetRelation.current; }
	EOF;

// Rule NodeSetRelation
ruleNodeSetRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getNodeSetRelationAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeSetRelationAccess().getSourceNodesNodeTypeParserRuleCall_1_0());
				}
				lv_sourceNodes_1_0=ruleNodeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeSetRelationRule());
					}
					add(
						$current,
						"sourceNodes",
						lv_sourceNodes_1_0,
						"de.cau.cs.se.geco.architecture.Architecture.NodeType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getNodeSetRelationAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeSetRelationAccess().getSourceNodesNodeTypeParserRuleCall_2_1_0());
					}
					lv_sourceNodes_3_0=ruleNodeType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeSetRelationRule());
						}
						add(
							$current,
							"sourceNodes",
							lv_sourceNodes_3_0,
							"de.cau.cs.se.geco.architecture.Architecture.NodeType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getNodeSetRelationAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeSetRelationAccess().getTargetNodesNodeTypeParserRuleCall_4_0());
				}
				lv_targetNodes_5_0=ruleNodeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeSetRelationRule());
					}
					add(
						$current,
						"targetNodes",
						lv_targetNodes_5_0,
						"de.cau.cs.se.geco.architecture.Architecture.NodeType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getNodeSetRelationAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNodeSetRelationAccess().getTargetNodesNodeTypeParserRuleCall_5_1_0());
					}
					lv_targetNodes_7_0=ruleNodeType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNodeSetRelationRule());
						}
						add(
							$current,
							"targetNodes",
							lv_targetNodes_7_0,
							"de.cau.cs.se.geco.architecture.Architecture.NodeType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getNodeSetRelationAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleNodeType
entryRuleNodeType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeTypeRule()); }
	iv_ruleNodeType=ruleNodeType
	{ $current=$iv_ruleNodeType.current; }
	EOF;

// Rule NodeType
ruleNodeType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNodeTypeRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getNodeTypeAccess().getTypeJvmTypeCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_0());
		}
		this_StringLiteral_0=ruleStringLiteral
		{
			$current = $this_StringLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_1());
		}
		this_IntLiteral_1=ruleIntLiteral
		{
			$current = $this_IntLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_2());
		}
		this_FloatLiteral_2=ruleFloatLiteral
		{
			$current = $this_FloatLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_3());
		}
		this_BooleanLiteral_3=ruleBooleanLiteral
		{
			$current = $this_BooleanLiteral_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getArrayLiteralParserRuleCall_4());
		}
		this_ArrayLiteral_4=ruleArrayLiteral
		{
			$current = $this_ArrayLiteral_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleArrayLiteral
entryRuleArrayLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayLiteralRule()); }
	iv_ruleArrayLiteral=ruleArrayLiteral
	{ $current=$iv_ruleArrayLiteral.current; }
	EOF;

// Rule ArrayLiteral
ruleArrayLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getArrayLiteralAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayLiteralAccess().getLiteralsLiteralParserRuleCall_1_0());
				}
				lv_literals_1_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
					}
					add(
						$current,
						"literals",
						lv_literals_1_0,
						"de.cau.cs.se.geco.architecture.Architecture.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getArrayLiteralAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayLiteralAccess().getLiteralsLiteralParserRuleCall_2_1_0());
					}
					lv_literals_3_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayLiteralRule());
						}
						add(
							$current,
							"literals",
							lv_literals_3_0,
							"de.cau.cs.se.geco.architecture.Architecture.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getArrayLiteralAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntLiteralRule()); }
	iv_ruleIntLiteral=ruleIntLiteral
	{ $current=$iv_ruleIntLiteral.current; }
	EOF;

// Rule IntLiteral
ruleIntLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloatLiteralRule()); }
	iv_ruleFloatLiteral=ruleFloatLiteral
	{ $current=$iv_ruleFloatLiteral.current; }
	EOF;

// Rule FloatLiteral
ruleFloatLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_FLOAT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFloatLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"de.cau.cs.se.geco.architecture.Architecture.FLOAT");
			}
		)
	)
;

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	iv_ruleBooleanLiteral=ruleBooleanLiteral
	{ $current=$iv_ruleBooleanLiteral.current; }
	EOF;

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_BOOLEAN
			{
				newLeafNode(lv_value_0_0, grammarAccess.getBooleanLiteralAccess().getValueBOOLEANTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBooleanLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"de.cau.cs.se.geco.architecture.Architecture.BOOLEAN");
			}
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			(
				('.')=>
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
				}
			)
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Rule ModelModifier
ruleModelModifier returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='in'
			{
				$current = grammarAccess.getModelModifierAccess().getINPUTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getModelModifierAccess().getINPUTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='out'
			{
				$current = grammarAccess.getModelModifierAccess().getOUTPUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getModelModifierAccess().getOUTPUTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='io'
			{
				$current = grammarAccess.getModelModifierAccess().getINTERMEDIATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getModelModifierAccess().getINTERMEDIATEEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule LogicOperator
ruleLogicOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='&'
			{
				$current = grammarAccess.getLogicOperatorAccess().getANDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLogicOperatorAccess().getANDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='|'
			{
				$current = grammarAccess.getLogicOperatorAccess().getOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLogicOperatorAccess().getOREnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule Comparator
ruleComparator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='=='
			{
				$current = grammarAccess.getComparatorAccess().getEQEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getComparatorAccess().getEQEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='!='
			{
				$current = grammarAccess.getComparatorAccess().getNEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getComparatorAccess().getNEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='>'
			{
				$current = grammarAccess.getComparatorAccess().getGREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getComparatorAccess().getGREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='<'
			{
				$current = grammarAccess.getComparatorAccess().getLWEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getComparatorAccess().getLWEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='>='
			{
				$current = grammarAccess.getComparatorAccess().getGEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getComparatorAccess().getGEEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='<='
			{
				$current = grammarAccess.getComparatorAccess().getLEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getComparatorAccess().getLEEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='~'
			{
				$current = grammarAccess.getComparatorAccess().getLIKEEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getComparatorAccess().getLIKEEnumLiteralDeclaration_6());
			}
		)
	)
;

fragment RULE_DIGIT : '0'..'9';

RULE_FLOAT : ('-'? RULE_DIGIT+ '.' RULE_DIGIT* (('e'|'E') ('+'|'-')? RULE_DIGIT+)? 'f'?|'-'? RULE_DIGIT+ 'f');

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
