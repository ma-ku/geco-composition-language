/**
 * generated by Xtext
 */
package de.cau.cs.se.geco.architecture.generator;

import com.google.common.collect.Iterators;
import de.cau.cs.se.geco.architecture.architecture.Model;
import de.cau.cs.se.geco.architecture.generator.GenerateBoxingModel;
import de.cau.cs.se.geco.architecture.generator.GenerateGecoCode;
import de.cau.cs.se.geco.architecture.model.boxing.BoxingModel;
import java.io.File;
import java.util.Iterator;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
@SuppressWarnings("all")
public class ArchitectureGenerator implements IGenerator {
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    TreeIterator<EObject> _allContents = resource.getAllContents();
    Iterator<Model> _filter = Iterators.<Model>filter(_allContents, Model.class);
    final Model model = IteratorExtensions.<Model>last(_filter);
    URI _uRI = resource.getURI();
    URI _trimFileExtension = _uRI.trimFileExtension();
    final String className = _trimFileExtension.lastSegment();
    String _name = model.getName();
    final String path = _name.replace(".", File.separator);
    final GenerateBoxingModel generateBoxingModel = new GenerateBoxingModel();
    final GenerateGecoCode generateGecoCode = new GenerateGecoCode(className);
    final BoxingModel boxingModel = generateBoxingModel.generate(model);
    final CharSequence textOutput = generateGecoCode.generate(boxingModel);
    StringConcatenation _builder = new StringConcatenation();
    _builder.append(path, "");
    _builder.append(File.separator, "");
    _builder.append(className, "");
    _builder.append(".xtend");
    fsa.generateFile(_builder.toString(), textOutput);
  }
}
