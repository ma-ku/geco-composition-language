/**
 * generated by Xtext 2.10.0
 */
package de.cau.cs.se.geco.architecture.validation;

import org.eclipse.xtext.validation.Check;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class ArchitectureValidator /* implements AbstractArchitectureValidator  */{
  @Check
  public Object checkWeaverSourceModelType(final /* Weaver */Object weaver) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field type is undefined for the type Object"
      + "\nThe method or field type is undefined for the type Object"
      + "\nThe method error(String, Object) is undefined"
      + "\nThe method or field ArchitecturePackage is undefined"
      + "\nThe method error(String, Object) is undefined"
      + "\nThe method or field ArchitecturePackage is undefined"
      + "\nThe method error(String, Object) is undefined"
      + "\nThe method or field ArchitecturePackage is undefined"
      + "\nreference cannot be resolved"
      + "\nsuperTypes cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nqualifiedName cannot be resolved"
      + "\nequals cannot be resolved"
      + "\n|| cannot be resolved"
      + "\nqualifiedName cannot be resolved"
      + "\nequals cannot be resolved"
      + "\nsize cannot be resolved"
      + "\n> cannot be resolved"
      + "\nget cannot be resolved"
      + "\nget cannot be resolved"
      + "\nresolveWeaverSourceModel cannot be resolved"
      + "\nresolveType cannot be resolved"
      + "\nisSubTypeOf cannot be resolved"
      + "\n! cannot be resolved"
      + "\ndetermineElementType cannot be resolved"
      + "\nresolveType cannot be resolved"
      + "\nisSubTypeOf cannot be resolved"
      + "\n! cannot be resolved"
      + "\nqualifiedName cannot be resolved"
      + "\nLiterals cannot be resolved"
      + "\nFRAGMENT__SOURCE_MODEL cannot be resolved"
      + "\nqualifiedName cannot be resolved"
      + "\nLiterals cannot be resolved"
      + "\nFRAGMENT__REFERENCE cannot be resolved"
      + "\nLiterals cannot be resolved"
      + "\nFRAGMENT__REFERENCE cannot be resolved");
  }
  
  @Check
  public Object checkGeneratorSourceModelType(final /* Generator */Object generator) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field type is undefined for the type Object"
      + "\nThe method error(String, Object) is undefined"
      + "\nThe method or field ArchitecturePackage is undefined"
      + "\nThe method error(String, Object) is undefined"
      + "\nThe method or field ArchitecturePackage is undefined"
      + "\nThe method error(String, Object) is undefined"
      + "\nThe method or field ArchitecturePackage is undefined"
      + "\nThe method error(String, Object) is undefined"
      + "\nThe method or field ArchitecturePackage is undefined"
      + "\nThe method error(String, Object) is undefined"
      + "\nThe method or field ArchitecturePackage is undefined"
      + "\nreference cannot be resolved"
      + "\nsuperTypes cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nsimpleName cannot be resolved"
      + "\nequals cannot be resolved"
      + "\nsize cannot be resolved"
      + "\n> cannot be resolved"
      + "\nget cannot be resolved"
      + "\ndetermineGeneratorInputType cannot be resolved"
      + "\nsourceModel cannot be resolved"
      + "\nresolveType cannot be resolved"
      + "\n!= cannot be resolved"
      + "\nisSubTypeOf cannot be resolved"
      + "\n! cannot be resolved"
      + "\ndetermineElementType cannot be resolved"
      + "\nresolveType cannot be resolved"
      + "\nisSubTypeOf cannot be resolved"
      + "\n! cannot be resolved"
      + "\ndetermineElementType cannot be resolved"
      + "\nqualifiedName cannot be resolved"
      + "\nqualifiedName cannot be resolved"
      + "\nLiterals cannot be resolved"
      + "\nFRAGMENT__SOURCE_MODEL cannot be resolved"
      + "\ndetermineGeneratorOutputType cannot be resolved"
      + "\ntargetModel cannot be resolved"
      + "\n!= cannot be resolved"
      + "\ntargetModel cannot be resolved"
      + "\nresolveType cannot be resolved"
      + "\nisSubTypeOf cannot be resolved"
      + "\n! cannot be resolved"
      + "\nqualifiedName cannot be resolved"
      + "\nqualifiedName cannot be resolved"
      + "\nLiterals cannot be resolved"
      + "\nFRAGMENT__TARGET_MODEL cannot be resolved"
      + "\nLiterals cannot be resolved"
      + "\nFRAGMENT__REFERENCE cannot be resolved"
      + "\nLiterals cannot be resolved"
      + "\nFRAGMENT__REFERENCE cannot be resolved"
      + "\nLiterals cannot be resolved"
      + "\nFRAGMENT__REFERENCE cannot be resolved");
  }
}
